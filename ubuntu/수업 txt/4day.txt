심화과정 2일차

특수 권한
    일반적을 리눅스 유닉스는 사용자의 파일권한을 부여하여 기초적인 보안체계를 유지한다 
    파일이나 디렉터리에서는 user, group, other 권한이 존재하며 각각 읽기, 쓰기 실행 권한을부여할 수 있다
    chmod와 비슷

setUID
    파일을 실행할때 일시적으로 소유자의 권한을 얻어 실행할 수 있도록 한다
    root 권한으로 지정된 프로그램에 setUID가 지정되어 있으면 root 권한으로 실행된다
    기존에 실행 권한이 없으면 대문자 S, 있으면 소문자 s로 표시된다
    4644가 root 권한? -rwSr--r-- 로 S 드감

    리눅스에서 설정되어 있는 대표적인 파일은 /usr/bin/passwd 이다
        해당 파일은 계정의 비밀번호를 변경할 수 있도록 하는 실행파일로 root 만 변경 가능하도록 설정되어 있다
        /usr/bin/passwd에 setUID가 설정되어 있지 않으면 

setGID
    파일을 실행할 때 일시적으로 파일 소유 그룹 

특수 변수 
    $0 $n $# $* $@ $? $$ $!

LINUX-Line Arguments

command-Line Arguments
    for문
    for 조건
    do
        실행할거 
    done

명령어 치환
    명령어 치환은 하나나 그 이상의 명령어의 출력을 재할당해준다
        명령어 치환은 말그대로 한 명령어의 출력을 다른 문맥으로 연결해 준다
    명령어 치환의 2가지 형태
        ₩₩(백틱임)
        $(...)
    명령어 치환은 bash/Zsh 에서 쓸 수 있는 툴셋을 확장시켜 줄 수 있다
    표준 출력으로 결과를 출력해주는 프로그램이나 스크립트를 짜고 그 결과를 변수로 할당하면 된다

임력과 출력 리다이렉트

    출력 리다이렉트
        가장 기본적인 형태는 파일 명령의 출력을 전송한다
        ll > ls.txt 하면 ll 결과가 ls.txt에 저장된다 
        이미 존재하는 파일에 하면 덮어쓰기 된다
    입력 리다이렉트
        출력과 반대
        command < inputfile
        줄수 단어수 바이트수 3가지 출력?

배열 (Zsh는 index가 0이 아닌 1부터 시작이다)
    우리가 지금까지 쉘 스크립트에서 변수를 선언할때는 각각 개별로 주었는데
    변수를 벼열로 선언하면 index로 다룰수 있다

    Zsh 는 $array하면 전체 출력된다 bash는 첫번째 방만 나온다
            bash는 포인터 느낌 그대로 간다
    ksh
        set 사용해야함

    변수 값 혹은 명령 실행 결과 변수 저장하기
        +=로 추가

기본 연산자 
    산술연산자
    관계연산자
    Boolean연산자
    문자열 연산자
    파일 텍스트 연산자 

let 명령어

expr 명령어

awk 명령어
    소수점 계산이 가능하다
    단 직접 변수 사용 못해서 파이프 필요함

bc 명령어 
    basic calculator 

산술연산자

관계연산자 (-eq -ne -gt -lt -ge -le) 
    g : greater 
    l : less 
    e : equal 
    n : not

/bash 는 숫자에 대해서만 연산해준다? 

Boolean연산자
    !(not) -o(or) -a(and)

문자열 연산자 (bashsms 문자열은 문자열 연산자만 가능하다?)
    =
    !=
    -z (문자열의 길이가 0이면)
    -n (문자열의 길이가 0이 아니면)
    str (빈문자열인지)

파일 테스트 연산자
    -b -c -d -f -g -k -p -t -u -r -w -x -s -e 
    파일 종류 등등 판별 

연산자 shell decision making 
    if else 
        공백 안지키면 오류난다
    
