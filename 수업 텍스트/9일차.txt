9일차

8일차때 while문 이어서

while문에서 조건문이 무조건 참이되면 무한루프에 걸린다.

쓸데없는 공백 -> 파일크기 커짐

do/while문
    do문은 무조건 실행하고 while문을 실행할지 condition확인
    do{
        //
    }
    while(condition)
    일반 while문과 차이는 한번은 무조건 진행

for문
    자체적으로 초기식, 표현식, 증감식을 모두 포함하는 반복문
    while문 보다는 좀더 간결하게 표현가능
    for(초기식; 조건; 증감식;){
        //code
    }

for in 문
    for ( key in object) ->  let x in person 
    {
        // 
    }

for of 란 것도 있음
for each 데이터 순회에서 함

array(배열)
    이름과 인덱스로 참조 -> 배열 이름과 배열 요소로 구성 
        인덱스는 배열 위치 숫자로 0부터 시작
    배열 요소 타입 고정 아님 
    배열 요소가 비어 있을 수도 있다 -> 빈칸으로 존재한다 -> 다른 언어는 0이라도 드가야함
    [] or new Array() 로 생성
 
    new Array() ->  객체의 메모리를 오브젝트에 생성해주겠다  -> 메모리 영역의 차이 사용은 똑같음
    [] => 로컬 메모리 영역
    
    배열에 자바스크립트 객체를 넣을수 있다. Json 데이터 등등

    주요 method
    push() / pop()      맨끝에 값을 추가 / 제거 (제거하면서 반환함 찍으면 제거한거 찍힘)
    unshift() / shift() 맨앞에 값을 추가 / 제거 -> 요소만 제거가 아니라 index까지 제거한다는 소리임
        stack : Stack은 ADT(추상 자료형)의 일종이다.ADT(Abstract Data Type)는 데이터의 구체적인 구현 방식은 생략하고, 
                데이터의 추상적 형태와 그 데이터를 다루는 방법만을 정해놓은 것
    splice()    배열값을 추가하거나 제거해서 반환 
        -> fruits.splice(2, 0, "Lemon", "Kiwi") [2]부터 0개 지우고 레몬 키위 삽입
    
    reverse()   배열 역순 재배치
    sort()      배열 데이터 정렬  
        기본 정렬 순서는 문자열의 유니코드 코드 포인트
        sort 종류 여러개이니까 따로 공부

    concat()    두 배열 병합 -> 요소만 추가도 가능 = push 느낌
    join()      배열 구분자 지정하기
    slice()     배열 일부 지정해서 가져옴

    toString    특정한 Number 객체를 나타내는 문자열을 반환합니다.

데이터 순회
    map()       모든 배열 데이터 마다 반복처리
        new map()으로 선언하고 map.set()으로 키와 값 추가
        object의 키는 문자열이지만 map은 모든값 
        실행시점까지 키를 알 수 없고 모든 키가 동일한 타입이면 map사용이 좋다

        forEach
            -> iteratemapforEach 공부하기

    filter()    특정 조건 만족하는 데이터만 처리


    reduce()    모든 데이터를 순회하면서 누적 연산 


